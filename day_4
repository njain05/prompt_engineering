# ðŸ“˜ Day 04: 03rd July 2025

## âœ… Topic Covered
Working with APIs, BeautifulSoup, and Website Summarization Project

## ðŸ§  Summary
Today we focused on **working with APIs**, specifically how to use them to connect our code with AI tools or web content. We implemented a small project that summarizes websites using AI and outputs the content in **Markdown format**.

We also learned how to handle **external and internal links**, **store summaries in files**, and **search through content**.

To extract website content, we were introduced to **BeautifulSoup**, a Python library used for web scraping.

## ðŸ§ª Concepts & Tools Covered

| Concept             | Description                                                       |
|---------------------|-------------------------------------------------------------------|
| API Integration     | Used to send/receive data between software components              |
| Markdown Formatting | Structured, readable text format used for clean outputs            |
| BeautifulSoup       | Python package for extracting data from HTML and XML               |
| Internal/External Links | Understanding website link structures                          |
| File Storage        | Saving summarized content to local text/markdown files             |
| Content Retrieval   | Searching and managing stored summary files                        |

## ðŸ’» Activity
- Made a website summarizer using API + BeautifulSoup
- Parsed websites and extracted main content
- Converted summaries into Markdown
- Saved and retrieved summaries from local storage
- Handled different types of links in web content

## ðŸ¤” Challenges Faced
Web scraping was slightly tricky due to different website structures. Understanding how to parse and clean content took some trial and error.

## ðŸŽ¯ Key Takeaway
APIs combined with scraping tools allow powerful automation â€” and Markdown helps keep results readable and well-structured.

## ðŸ“ˆ Understanding Today: 9/10
